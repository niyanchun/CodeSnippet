apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: logkeeper
  labels:
    k8s-app: kibana-logging
    # addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "docker/default"
    spec:
      containers:
        - name: kibana-logging
          image: harbor.k8s/agree/kibana:6.8.3
          resources:
            # need more cpu upon initialization, therefore burstable class
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          env:
            - name: ELASTICSEARCH_HOSTS
              value: http://elasticsearch-loadbalancer:9200
            # - name: SERVER_NAME
            #   value: kibana-logging
            # - name: SERVER_BASEPATH
            #   value: /api/v1/namespaces/default/services/kibana-logging/proxy
            # - name: SERVER_REWRITEBASEPATH
            #   value: "false"
          ports:
            - containerPort: 5601
              name: ui
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /api/status
          #     port: ui
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     path: /api/status
          #     port: ui
          #   initialDelaySeconds: 5
          #   timeoutSeconds: 10

--- 

kind: Service
apiVersion: v1
metadata:
  labels:
    elastic-app: kibana
  name: kibana-service
  namespace: logkeeper
spec:
  ports:
    - port: 5601
      targetPort: 5601
      nodePort: 35602
  selector:
    k8s-app: kibana-logging
  type: NodePort
